#!/bin/bash

# Define paths
APP_NAME="Canda"
APP_PATH="$HOME/Applications/$APP_NAME.app"
ICON_PATH="$HOME/Desktop/Canda.icns"  # <-- Path to your Canda icon file
SCRIPT_PATH="$HOME/Applications/Canda_Hyper_prank.sh"  # <-- Path to your prank script

# Step 1: Create the app structure
echo "Creating app bundle structure..."
mkdir -p "$APP_PATH/Contents/MacOS"
mkdir -p "$APP_PATH/Contents/Resources"
mkdir -p "$APP_PATH/Contents/Info.plist"

# Step 2: Create a shell script to execute the prank shell script
echo "Creating shell script to execute prank shell script..."
cat <<EOF > "$APP_PATH/Contents/MacOS/$APP_NAME"
#!/bin/bash
sh "$SCRIPT_PATH"
EOF

# Step 3: Make the shell script executable
chmod +x "$APP_PATH/Contents/MacOS/$APP_NAME"

# Step 4: Set the app icon
if [ -f "$ICON_PATH" ]; then
  echo "Setting custom icon..."
  cp "$ICON_PATH" "$APP_PATH/Contents/Resources/$APP_NAME.icns"
  # Set custom icon using SetFile
  SetFile -a C "$APP_PATH"
else
  echo "⚠️ Icon file not found at $ICON_PATH. Skipping icon replacement."
fi

# Step 5: Create the Info.plist file
echo "Creating Info.plist..."
cat <<EOF > "$APP_PATH/Contents/Info.plist"
<?xml version="1.0" encoding="UTF-8"?>
<plist version="1.0">
  <dict>
    <key>CFBundleName</key>
    <string>$APP_NAME</string>
    <key>CFBundleDisplayName</key>
    <string>$APP_NAME</string>
    <key>CFBundleIdentifier</key>
    <string>com.example.$APP_NAME</string>
    <key>CFBundleExecutable</key>
    <string>$APP_NAME</string>
    <key>CFBundleIconFile</key>
    <string>$APP_NAME.icns</string>
    <key>CFBundleVersion</key>
    <string>1.0</string>
    <key>CFBundlePackageType</key>
    <string>APPL</string>
  </dict>
</plist>
EOF

# Step 6: Remove quarantine attributes from the new app
echo "Removing quarantine flags..."
xattr -cr "$APP_PATH"

# Step 7: Re-sign the app to ensure it can be opened
echo "Re-signing the app..."
codesign --force --deep --sign - "$APP_PATH"

# Step 8: Open the new app
echo "Canda.app created successfully at $APP_PATH"
open "$APP_PATH"
