#!/bin/bash

APP_NAME="CandaHyperPrank"
APP_DIR="$HOME/Applications/$APP_NAME.app"
EXEC_DIR="$APP_DIR/Contents/MacOS"
RES_DIR="$APP_DIR/Contents/Resources"
PLIST_PATH="$APP_DIR/Contents/Info.plist"
ICON_PATH="$RES_DIR/icon.icns"

# Clean previous version
rm -rf "$APP_DIR"

# Create directory structure
mkdir -p "$EXEC_DIR"
mkdir -p "$RES_DIR"

# Create prank shell script
cat << 'EOF' > "$RES_DIR/run.sh"
#!/bin/bash
clear
echo "Initializing Hyper Mode..."
sleep 1
for i in {1..100}; do
  echo -ne "Installing Canda_AI_Core: $i% complete\r"
  sleep 0.03
done
say "Canda Hyper Mode is now active"
sleep 1
echo "
 â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ
 â–ˆ SYSTEM BREACH ALERT â–ˆ
 â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ
"
sleep 1
say "Data breach detected."
for i in {1..15}; do
  echo "â–ˆ â–ˆ â–ˆ SYSTEM BREACH â–ˆ â–ˆ â–ˆ"
  sleep 0.08
done
echo "FATAL ERROR: SYSTEM CORRUPTED"
say "Fatal error. Shutting down."
for i in {5..1}; do
  echo "Shutdown in $i..."
  sleep 1
done
echo "ðŸ’¥ GOTCHA! No systems were harmed."
say "Just kidding."
EOF

chmod +x "$RES_DIR/run.sh"

# Create C launcher source
cat << EOF > "$EXEC_DIR/launcher.c"
#include <stdlib.h>
int main() {
    system("open -a Terminal \\"$RES_DIR/run.sh\\"");
    return 0;
}
EOF

# Compile C launcher
clang -o "$EXEC_DIR/launcher" "$EXEC_DIR/launcher.c"

# Remove source file
rm "$EXEC_DIR/launcher.c"

# Create Info.plist
cat << EOF > "$PLIST_PATH"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
 "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>CFBundleName</key>
  <string>$APP_NAME</string>
  <key>CFBundleIdentifier</key>
  <string>com.fake.$APP_NAME</string>
  <key>CFBundleVersion</key>
  <string>1.0</string>
  <key>CFBundlePackageType</key>
  <string>APPL</string>
  <key>CFBundleExecutable</key>
  <string>launcher</string>
</dict>
</plist>
EOF

# Remove quarantine attribute
xattr -cr "$APP_DIR"

# Ad-hoc code sign
codesign --force --deep --sign - "$APP_DIR"

# Done
echo "âœ… $APP_NAME installed to $APP_DIR"
open "$APP_DIR"
